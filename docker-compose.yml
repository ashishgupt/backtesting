# Docker Compose for Portfolio Backtesting System
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: portfolio_db
    environment:
      POSTGRES_USER: portfolio_user
      POSTGRES_PASSWORD: portfolio_pass
      POSTGRES_DB: backtesting
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U portfolio_user -d backtesting"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - portfolio_network

  # Portfolio API
  api:
    build: .
    container_name: portfolio_api
    environment:
      DATABASE_URL: postgresql://portfolio_user:portfolio_pass@db:5432/backtesting
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./web:/app/web:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - portfolio_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: portfolio_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web:/usr/share/nginx/html:ro
    depends_on:
      - api
    networks:
      - portfolio_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  portfolio_network:
    driver: bridge
